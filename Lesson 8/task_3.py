# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу
# скрипта, введя, например, команду “stop”. При этом скрипт завершается, сформированный список выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки. При вводе пользователем
# очередного элемента необходимо реализовать проверку типа элемента и вносить его в список, только если введено число.
# Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
# При этом работа скрипта не должна завершаться.


class My_error(Exception):
    def __init__(self, txt):
        self.txt = txt

my_list = []
while True:
    print ('для выхода наберите "exit"')
    in_data = input('Введите данные \n')
    try:
        if not in_data.find('exit'):
            print('выход!!!!!!!!!!!!!!')
            break
        if not in_data.isdigit():
            raise My_error('Вы ввели не число, повторите ввод:  ')
    except (ValueError, My_error) as err:
        print(err)
    else:
        my_list.append(in_data)
    finally:
        print('список = ', my_list)
